# Setup Go alpine to install buf protoc-gen-go plugin.
# At the time of this changes, the buf image doesn't have a way to customise the plugins, so this is a more concise
# solution.
FROM golang:alpine AS golang
ENV GO111MODULE=on
RUN go install github.com/bufbuild/buf/cmd/buf@v1.45.0
RUN go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.35.1

# Install git and its dependencies to enable cloning as we generate protos from remote for OCSF.
FROM alpine AS git
RUN apk --no-cache add git ca-certificates openssl
RUN mkdir -p /git-deps/bin /git-deps/lib /git-deps/etc/ssl/certs
RUN cp /usr/bin/git /git-deps/bin
RUN cp /usr/libexec/git-core/git-remote-https /git-deps/bin/
# Copying over libraries and certs so we can actually use git over https.
RUN ldd /usr/bin/git | grep -o '/[^ ]*' | xargs -I '{}' cp '{}' /git-deps/lib
RUN ldd /usr/libexec/git-core/git-remote-https | grep -o '/[^ ]*' | xargs -I '{}' cp '{}' /git-deps/lib/
RUN cp /etc/ssl/certs/ca-certificates.crt /git-deps/etc/ssl/certs/ca-certificates.crt

# Wrap everything together in a scratch container to do all things buf.
FROM scratch
COPY --from=golang /go/bin/buf /go/bin/buf
COPY --from=golang /go/bin/protoc-gen-go /go/bin/protoc-gen-go
COPY --from=git /git-deps/bin/git /usr/bin/
COPY --from=git /git-deps/bin/git-remote-https /usr/bin/
COPY --from=git /git-deps/lib /lib/
COPY --from=git /git-deps/etc/ssl/certs /etc/ssl/certs/
ENV GIT_SSL_CAINFO=/etc/ssl/certs/ca-certificates.crt
ENV PATH="/go/bin:/usr/bin:${PATH}"
ENTRYPOINT ["/go/bin/buf"]
