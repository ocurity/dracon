# DO NOT EDIT. Code generated by:
# github.com/ocurity/dracon/bin/kustomize-component-generator.

apiVersion: kustomize.config.k8s.io/v1alpha1
kind: Component
resources:
  - task.yaml
patches:
  # Add the Task to the Tekton Pipeline.
  - patch: |
      apiVersion: tekton.dev/v1beta1
      kind: Pipeline
      metadata:
        name: unused
      spec:
        workspaces:
          - name: output
        tasks:
          - name: producer-zaproxy
            taskRef:
              name: producer-zaproxy
            workspaces:
              - name: output
                workspace: output
            params:
              - name: producer-zaproxy-target
                value: $(params.producer-zaproxy-target)
              - name: producer-zaproxy-config-file-base64
                value: $(params.producer-zaproxy-config-file-base64)
              - name: producer-zaproxy-flags
                value: $(params.producer-zaproxy-flags)
              - name: producer-zaproxy-automation-framework-file-base64
                value: $(params.producer-zaproxy-automation-framework-file-base64)
        params:
          - name: producer-zaproxy-target
            type: string
            default: ""
          - name: producer-zaproxy-config-file-base64
            type: string
            default: ""
          - name: producer-zaproxy-flags
            type: string
            default: ""
          - name: producer-zaproxy-automation-framework-file-base64
            type: string
            default: ""
    target:
      kind: Pipeline
  # Add anchors to Task.
  - patch: |
      apiVersion: tekton.dev/v1beta1
      kind: Task
      metadata:
        name: producer-zaproxy
        labels:
          v1.dracon.ocurity.com/component: producer
      spec:
        params:
          - name: anchors
            type: array
            description: A list of tasks that this task depends on using their anchors.
            default: []
        results:
          - name: anchor
            description: An anchor to allow other tasks to depend on this task.
        steps:
          - name: anchor
            image: docker.io/busybox:1.35.0
            script: echo "$(context.task.name)" > "$(results.anchor.path)"
    target:
      kind: Task
      name: producer-zaproxy
  # If we have a `source` task in the pipeline (added by a `source` component),
  # depend on the completion of that source by referencing its anchor.
  - patch: |
      apiVersion: tekton.dev/v1beta1
      kind: Pipeline
      metadata:
        name: unused
      spec:
        tasks:
          - name: producer-zaproxy
            params:
              - name: anchors
                value:
                  - $(tasks.source.results.anchor)
    target:
      kind: Pipeline
      annotationSelector: v1.dracon.ocurity.com/has-source=true
  # If we have a producer-aggregator task in the pipeline (added by the
  # producer-aggregator component), make it depend on the completion of this
  # producer.
  - patch: |
      apiVersion: tekton.dev/v1beta1
      kind: Pipeline
      metadata:
        name: unused
      spec:
        tasks:
          - name: producer-aggregator
            params:
              - name: anchors
                value:
                  - $(tasks.producer-zaproxy.results.anchor)
    target:
      kind: Pipeline
      annotationSelector: v1.dracon.ocurity.com/has-producer-aggregator=true
  # Add scan information to Task.
  - patch: |
      apiVersion: tekton.dev/v1beta1
      kind: Task
      metadata:
        name: producer-zaproxy
        labels:
          v1.dracon.ocurity.com/component: producer
      spec:
        params:
          - name: dracon_scan_id
            type: string
          - name: dracon_scan_start_time
            type: string
        steps:
          - name: run-zap
            image: docker.io/owasp/zap2docker-stable:2.12.0
            script: "#! /bin/bash\n set -ex\n automation=\"$(params.producer-zaproxy-automation-framework-file-base64)\"\n configFile=\"$(params.producer-zaproxy-config-file-base64)\"\n if [ -z \"$automation\" ]; then \n   if [ -z  \"$configFile\" ]; then\n     echo \"Running ZAP with args: $(params.producer-zaproxy-flags)\"\n     zap.sh -cmd -silent -notel -quickout /zap/wrk/out.json -quickurl $(params.producer-zaproxy-target) $(params.producer-zaproxy-flags)\n   else \n     echo \"$configFile\" | base64 -d > configuration.xml\n     zap.sh -cmd -silent -notel -quickout /zap/wrk/out.json -quickurl $(params.producer-zaproxy-target) -configFile configuration.xml\n     $(p..arams.producer-zaproxy-flags)\n   fi\n else \n   echo \"$automation\" | base64 -d > automation.yaml\n   cat automation.yaml\n   zap.sh -cmd -autorun automation.yaml\n fi\n"
            env:
              - name: DRACON_SCAN_TIME
                value: $(params.dracon_scan_start_time)
              - name: DRACON_SCAN_ID
                value: $(params.dracon_scan_id)
          - name: produce-issues
            image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/producers/zaproxy/image:{{ default "latest" .Values.dracon_os_component_version }}'
            env:
              - name: DRACON_SCAN_TIME
                value: $(params.dracon_scan_start_time)
              - name: DRACON_SCAN_ID
                value: $(params.dracon_scan_id)
    target:
      kind: Task
      name: producer-zaproxy
  - patch: |
      apiVersion: tekton.dev/v1beta1
      kind: Pipeline
      metadata:
        name: unused
      spec:
        tasks:
          - name: producer-zaproxy
            params:
              - name: dracon_scan_id
                value: $(tasks.base.results.dracon-scan-id)
              - name: dracon_scan_start_time
                value: $(tasks.base.results.dracon-scan-start-time)
    target:
      kind: Pipeline
