---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: producer-ossf-scorecard
  labels:
    v1.dracon.ocurity.com/component: producer
    v1.dracon.ocurity.com/test-type: sast
spec:
  params:
  # - name: producer-ossf-scorecard-flags
  #   type: array
  #   default: []
  - name: producer-ossf-scorecard-input-repo
    type: string
  - name: producer-ossf-scorecard-github-auth-token
    type: string

  volumes:
    - name: scratch
      emptyDir: {}
  workspaces:
    - name: output
      description: The workspace containing the source-code to scan.
  steps:
  - name: run-ossf-scorecard
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.image.registry }}/components/producers/ossf-scorecard/scorecard-dracon:{{ .Chart.AppVersion }}'
    env:
      - name: GITHUB_AUTH_TOKEN
        value: "$(params.producer-ossf-scorecard-github-auth-token)"
    script: |
      /scorecard \
      --format=json \
      --show-details \
      --repo=$(params.producer-ossf-scorecard-input-repo) >/scratch/out.json
       # TODO(spyros): add flags here once scorecard can write results to file
    volumeMounts:
    - mountPath: /scratch
      name: scratch

  - name: produce-issues
    imagePullPolicy: IfNotPresent
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.image.registry }}/components/producers/ossf-scorecard:{{ .Chart.AppVersion }}'
    command: ["/app/components/producers/ossf-scorecard/ossf-scorecard-parser"]
    args:
    - "-in=/scratch/out.json"
    - "-out=$(workspaces.output.path)/.dracon/producers/ossf-scorecard.pb"
    volumeMounts:
    - mountPath: /scratch
      name: scratch
