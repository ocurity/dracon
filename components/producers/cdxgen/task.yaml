---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: producer-cdxgen
  labels:
    v1.dracon.ocurity.com/component: producer
spec:
  params:
    - name: producer-cdxgen-flags
      type: array
      default: []
    - name: producer-cdxgen-fetch-license
      type: string
      default: "false"
    - name: producer-cdxgen-github-token
      type: string
      default: ""
    - name: producer-cdxgen-astgen-ignore-file-pattern
      type: string
      default: ""
    - name: producer-cdxgen-astgen-ignore-dirs
      type: string
      default: ""
  volumes:
    - name: scratch
      emptyDir: {}
  workspaces:
    - name: source-code-ws
      description: The workspace containing the source-code to scan.
  steps:
    - name: run-cdxgen
      image: ghcr.io/cyclonedx/cdxgen:v9.8.10
      env:
        - name: FETCH_LICENSE
          value: $(params.producer-cdxgen-fetch-license)
        - name: GITHUB_TOKEN
          value: $(params.producer-cdxgen-github-token)
        - name: ASTGEN_IGNORE_FILE_PATTERN
          value: $(params.producer-cdxgen-astgen-ignore-file-pattern)
        - name: ASTGEN_IGNORE_DIRS
          value: $(params.producer-cdxgen-astgen-ignore-dirs)
      script: node /opt/cdxgen/bin/cdxgen.js -r -p -o /scratch/out.json $(workspaces.source-code-ws.path)/ --spec-version 1.4
      volumeMounts:
        - mountPath: /scratch
          name: scratch

    - name: produce-issues
      imagePullPolicy: IfNotPresent
      image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/producers/cdxgen/image:{{ default "latest" .Values.dracon_os_component_version }}'
      command: ["/app/components/producers/cdxgen/cdxgen-parser"]
      args:
        - "-in=/scratch/out.json"
        - "-out=$(workspaces.source-code-ws.path)/.dracon/producers/cdxgen.pb"
      volumeMounts:
        - mountPath: /scratch
          name: scratch
