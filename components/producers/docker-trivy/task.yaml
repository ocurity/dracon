---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: producer-docker-trivy
  labels:
    v1.dracon.ocurity.com/component: producer
spec:
  params:
  - name: producer-docker-trivy-flags
    type: array
    default: []
  - name: producer-docker-trivy-target
    type: string
    default: "$(workspaces.source-code-ws.path)"
  - name: producer-docker-trivy-format
    type: string
  - name: producer-docker-trivy-command
    type: string
  volumes:
    - name: scratch
      emptyDir: {}
  workspaces:
    - name: source-code-ws
      description: The workspace containing the source-code to scan.
  steps:
  - name: run-trivy
    image: docker.io/aquasec/trivy:0.37.1
    command: [trivy]
    args:
    - "$(params.producer-docker-trivy-flags[*])"
    - -q
    - -f
    - $(params.producer-docker-trivy-format)
    - -o
    - /scratch/out.json
    - $(params.producer-docker-trivy-command)
    - $(params.producer-docker-trivy-target)
    volumeMounts:
    - mountPath: /scratch
      name: scratch

  - name: produce-issues
    imagePullPolicy: IfNotPresent
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/producers/docker-trivy/image:latest'
    command: ["app/components/producers/docker-trivy/trivy-parser"]
    args:
    - "-format=$(params.producer-docker-trivy-format)"
    - "-in=/scratch/out.json"
    - "-out=$(workspaces.source-code-ws.path)/.dracon/producers/docker-trivy.pb"
    volumeMounts:
    - mountPath: /scratch
      name: scratch
