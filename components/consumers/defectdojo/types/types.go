// Package types of the defectdojo consumer represents Defectdojo request objects
package types

/*
 * Defect Dojo API v2
 *
 * Defect Dojo - Open Source vulnerability Management made easy. Prefetch related parameters/responses not yet in the schema.
 *
 * API version: 2.10.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

// FindingCreateRequest models all the possible fields in a POST /findings request.
type FindingCreateRequest struct {
	Active            bool     `json:"active"`
	Cvssv3Score       float32  `json:"cvssv3_score,omitempty"`
	Cwe               int32    `json:"cwe,omitempty"`
	Date              string   `json:"date,omitempty"`
	Description       string   `json:"description"`
	Duplicate         bool     `json:"duplicate"`
	FalseP            bool     `json:"false_p"`
	FilePath          string   `json:"file_path,omitempty"`
	FoundBy           []int32  `json:"found_by,omitempty"`
	Line              int32    `json:"line,omitempty"`
	NumericalSeverity string   `json:"numerical_severity,omitempty"`
	Severity          string   `json:"severity"`
	Tags              []string `json:"tags,omitempty"`
	Test              int32    `json:"test"`
	Title             string   `json:"title"`
	UniqueIDFromTool  string   `json:"unique_id_from_tool,omitempty"`
	Verified          bool     `json:"verified"`
	VulnIDFromTool    string   `json:"vuln_id_from_tool,omitempty"`
}

// FindingCreateResponse models all the possible fields in a POST /findings response.
type FindingCreateResponse struct {
	Active            bool     `json:"active"`
	Cvssv3Score       float32  `json:"cvssv3_score,omitempty"`
	Cwe               int32    `json:"cwe,omitempty"`
	Date              string   `json:"date,omitempty"`
	Description       string   `json:"description"`
	Duplicate         bool     `json:"duplicate"`
	FalseP            bool     `json:"false_p"`
	FilePath          string   `json:"file_path,omitempty"`
	FoundBy           []int32  `json:"found_by"`
	ID                int32    `json:"id"`
	Line              int32    `json:"line,omitempty"`
	NumericalSeverity string   `json:"numerical_severity,omitempty"`
	Severity          string   `json:"severity"`
	Tags              []string `json:"tags,omitempty"`
	Test              int32    `json:"test"`
	Title             string   `json:"title"`
	UniqueIDFromTool  string   `json:"unique_id_from_tool,omitempty"`
	Verified          bool     `json:"verified"`
	VulnIDFromTool    string   `json:"vuln_id_from_tool,omitempty"`
}

// DojoUser models a defectdojo user object.
type DojoUser struct {
	Email       string `json:"email"`
	FirstName   string `json:"first_name"`
	ID          int32  `json:"id"`
	IsActive    bool   `json:"is_active"`
	IsSuperuser bool   `json:"is_superuser"`
	LastLogin   string `json:"last_login"`
	LastName    string `json:"last_name"`
	Username    string `json:"username"`
}

// GetUsersResponse models the response to GET /users/.
type GetUsersResponse struct {
	Count    int32      `json:"count"`
	Next     string     `json:"next"`
	Previous string     `json:"previous"`
	Results  []DojoUser `json:"results"`
}

// EngagementRequest models the POST /engagements request.
type EngagementRequest struct {
	DeduplicationOnEngagement bool     `json:"deduplication_on_engagement,omitempty"`
	Description               string   `json:"description,omitempty"`
	Name                      string   `json:"name,omitempty"`
	Product                   int32    `json:"product"`
	Status                    string   `json:"status,omitempty"`
	Tags                      []string `json:"tags,omitempty"`
	TargetEnd                 string   `json:"target_end,omitempty"`
	TargetStart               string   `json:"target_start,omitempty"`
}

// EngagementResponse models the POST /engagements response.
type EngagementResponse struct {
	DeduplicationOnEngagement bool     `json:"deduplication_on_engagement,omitempty"`
	Description               string   `json:"description,omitempty"`
	ID                        int32    `json:"id"`
	Name                      string   `json:"name,omitempty"`
	Product                   int32    `json:"product"`
	Status                    string   `json:"status,omitempty"`
	Tags                      []string `json:"tags,omitempty"`
	TargetStart               string   `json:"target_start"`
}

// TestCreateRequest models the POST /tests request.
type TestCreateRequest struct {
	Description string   `json:"description"`
	Engagement  int32    `json:"engagement,omitempty"`
	Tags        []string `json:"tags,omitempty"`
	TargetEnd   string   `json:"target_end"`
	TargetStart string   `json:"target_start"`
	TestType    int32    `json:"test_type"`
	Title       string   `json:"title"`
}

// TestCreateResponse models the POST /tests response.
type TestCreateResponse struct {
	Description string   `json:"description"`
	Engagement  int32    `json:"engagement,omitempty"`
	ID          int32    `json:"id"`
	Tags        []string `json:"tags,omitempty"`
	TargetEnd   string   `json:"target_end"`
	TargetStart string   `json:"target_start"`
	TestType    int32    `json:"test_type"`
	Title       string   `json:"title"`
}
