---
runner:
  go/vet:
    cmd: go vet $(go list ./... | grep -v /vendor/ | grep -v github.com/ocurity/dracon/api/proto/)
    format: govet

  go/staticcheck:
    cmd: staticcheck -checks "all,-SA1019,-ST1000" $(go list ./... | grep -v /vendor/ | grep -v github.com/ocurity/dracon/api/proto)
    format: staticcheck

  go/revive:
    cmd: revive -exclude ./vendor/... -exclude ./api/proto/... -config revive.toml ./...
    errorformat:
      - '%f:%l:%c: %m'
 
  go/containedctx:
    cmd: go vet -vettool=$(which containedctx) $(go list ./... | grep -v /vendor/ | grep -v github.com/ocurity/dracon/api/proto)
    errorformat:
      - '%f:%l:%c: %m'

  go/ineffassign:
    cmd: ineffassign $(go list ./... | grep -v /vendor/ | grep -v github.com/ocurity/dracon/api/proto)
    errorformat:
      - '%f:%l:%c: %m'

  go/errorlint:
    cmd: go-errorlint -errorf-multi -errorf -test $(go list ./... | grep -v /vendor/ | grep -v github.com/ocurity/dracon/api/proto)
    errorformat:
      - '%f:%l:%c: %m'

  go/errcheck:
    cmd: errcheck -asserts -blank $(go list ./... | grep -v /vendor/ | grep -v github.com/ocurity/dracon/api/proto)
    errorformat:
      - '%f:%l:%c:%m'

  npm/remark:
    ###################### Removes ansi codes see https://github.com/reviewdog/errorformat/issues/51
    cmd: npm run lint | sed 's/\x1b\[[0-9;]*m//g'
    format: remark-lint

  # TODO: figure out how to set errorformat to parse the error output
  # actionlint:
  #   cmd: actionlint
  #   errorformat:
  #     - 

  # TODO(OCU-130): Enable buf-lint again
  # buf_lint:
  #   cmd: buf lint . --path ./api/
  #   level: error
  #   format: buf
