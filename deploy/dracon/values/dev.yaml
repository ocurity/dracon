
elasticsearch:
  enabled: true
  version: 8.3.2

kibana:
  enabled: true
  version: 8.3.2
  ingress:
    enabled: true
    className: nginx
    host: kibana.dracon.localhost
    tlsEnabled: false

mongodb:
  enabled: true
  auth:
    enabled: true
    usernames: ["consumer-mongodb"]
    passwords: ["consumer-mongodb"]
    databases: ["consumer-mongodb"]

arangodb:
  enabled: true
  version: 3.7.10
  ingress:
    className: nginx
    host: arangodb.dracon.localhost

image:
  registry: kind-registry:5000/ocurity/dracon

postgresql:
  enabled: true
  auth:
    username: dracon
    password: dracon
    database: dracon
    postgresPassword: dracon
    querystringargs: "sslmode=disable"
  host: dracon-postgresql:5432

neo4j:
  # if set, a Neo4j instnace will be deployed
  enabled: true
  neo4j:
    edition: community
    name: neo4j
  volumes:
    data:
      mode: defaultStorageClass
  # TODO: add authorization
  config:
    dbms.security.auth_enabled: "false"

tekton:
  enabled: true

deduplication-db-migrations:
  enabled: true
  database:
    auth:
      username: dracon
      password: dracon
      database: dracon
      postgresPassword: dracon
      querystringargs: "sslmode=disable"
    host: dracon-postgresql:5432
