---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: resolvers
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "tekton.name" . }}'
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "tekton.chart" . }}'
    pipeline.tekton.dev/release: v0.44.0
    version: v0.44.0
  name: tekton-pipelines-remote-resolvers
  namespace: tekton-pipelines-resolvers
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: resolvers
      app.kubernetes.io/instance: '{{ .Release.Name }}'
      app.kubernetes.io/managed-by: '{{ .Release.Service }}'
      app.kubernetes.io/name: '{{ include "tekton.name" . }}'
      app.kubernetes.io/part-of: tekton-pipelines
      app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
      helm.sh/chart: '{{ include "tekton.chart" . }}'
  template:
    metadata:
      labels:
        app: tekton-pipelines-resolvers
        app.kubernetes.io/component: resolvers
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/managed-by: '{{ .Release.Service }}'
        app.kubernetes.io/name: '{{ include "tekton.name" . }}'
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
        helm.sh/chart: '{{ include "tekton.chart" . }}'
        pipeline.tekton.dev/release: v0.44.0
        version: v0.44.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: resolvers
                    app.kubernetes.io/instance: '{{ .Release.Name }}'
                    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
                    app.kubernetes.io/name: '{{ include "tekton.name" . }}'
                    app.kubernetes.io/part-of: tekton-pipelines
                    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
                    helm.sh/chart: '{{ include "tekton.chart" . }}'
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: CONFIG_FEATURE_FLAGS_NAME
              value: feature-flags
            - name: CONFIG_LEADERELECTION_NAME
              value: config-leader-election
            - name: METRICS_DOMAIN
              value: tekton.dev/resolution
            - name: ARTIFACT_HUB_API
              value: https://artifacthub.io/
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/resolvers:v0.44.0@sha256:9e156710dc7730487640faa798a7f70e32f15bd31ec9f50cab2c7f5e154a3dfe
          name: controller
          ports:
            - containerPort: 9090
              name: metrics
          resources:
            limits:
              cpu: 1000m
              memory: 1000Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
      serviceAccountName: tekton-pipelines-resolvers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "tekton.name" . }}'
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "tekton.chart" . }}'
    pipeline.tekton.dev/release: v0.44.0
    version: v0.44.0
  name: tekton-pipelines-controller
  namespace: tekton-pipelines
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: '{{ .Release.Name }}'
      app.kubernetes.io/managed-by: '{{ .Release.Service }}'
      app.kubernetes.io/name: '{{ include "tekton.name" . }}'
      app.kubernetes.io/part-of: tekton-pipelines
      app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
      helm.sh/chart: '{{ include "tekton.chart" . }}'
  template:
    metadata:
      labels:
        app: tekton-pipelines-controller
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/managed-by: '{{ .Release.Service }}'
        app.kubernetes.io/name: '{{ include "tekton.name" . }}'
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
        helm.sh/chart: '{{ include "tekton.chart" . }}'
        pipeline.tekton.dev/release: v0.44.0
        version: v0.44.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: NotIn
                    values:
                      - windows
      containers:
        - args:
            - -git-image
            - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.44.0@sha256:baa4110837ef91c3ec26a00f3c5d980fef174b97934cf2fc9115092ec78d35ee
            - -entrypoint-image
            - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/entrypoint:v0.44.0@sha256:0be7d0cd52ba04baa136f987c74d80d171e3c1c86d47db8368825cfbe4d8df0b
            - -nop-image
            - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/nop:v0.44.0@sha256:779508dcf27d658148d532d59ff505d5afc45c6aa07111d12169a90be6a6a9d8
            - -sidecarlogresults-image
            - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/sidecarlogresults:v0.44.0@sha256:4f3ac70c281f60de5634e3c8d4e17210a8d64aa6ae2d933739dbfc3cb674b8d0
            - -imagedigest-exporter-image
            - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/imagedigestexporter:v0.44.0@sha256:b65389daa312b9c1bfe9cc1d2c9066a877676034b4264b3576e3ccf8843b961d
            - -pr-image
            - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/pullrequest-init:v0.44.0@sha256:c80af31a67027b9e9dc9b710856ecda8137348bb82aefb1dd59949039ea17fc2
            - -workingdirinit-image
            - gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/workingdirinit:v0.44.0@sha256:58d1145c65711eda6198c5b8d3a0d36955f0a56d732c961d29cab4381cbce644
            - -gsutil-image
            - gcr.io/google.com/cloudsdktool/cloud-sdk@sha256:27b2c22bf259d9bc1a291e99c63791ba0c27a04d2db0a43241ba0f1f20f4067f
            - -shell-image
            - cgr.dev/chainguard/busybox@sha256:19f02276bf8dbdd62f069b922f10c65262cc34b710eea26ff928129a736be791
            - -shell-image-win
            - mcr.microsoft.com/powershell:nanoserver@sha256:b6d5ff841b78bdf2dfed7550000fd4f3437385b8fa686ec0f010be24777654d6
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_DEFAULTS_NAME
              value: config-defaults
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: CONFIG_ARTIFACT_BUCKET_NAME
              value: config-artifact-bucket
            - name: CONFIG_ARTIFACT_PVC_NAME
              value: config-artifact-pvc
            - name: CONFIG_FEATURE_FLAGS_NAME
              value: feature-flags
            - name: CONFIG_LEADERELECTION_NAME
              value: config-leader-election
            - name: CONFIG_TRUSTED_RESOURCES_NAME
              value: config-trusted-resources
            - name: SSL_CERT_FILE
              value: /etc/config-registry-cert/cert
            - name: SSL_CERT_DIR
              value: /etc/ssl/certs
            - name: METRICS_DOMAIN
              value: tekton.dev/pipeline
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/controller:v0.44.0@sha256:51e4c16fc4d0b18912106ff7fe37cc24c0667de6af468cdd1a9e9dc174039de1
          livenessProbe:
            httpGet:
              path: /health
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: tekton-pipelines-controller
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8080
              name: probes
          readinessProbe:
            httpGet:
              path: /readiness
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - mountPath: /etc/config-logging
              name: config-logging
            - mountPath: /etc/config-registry-cert
              name: config-registry-cert
            - mountPath: /etc/verification-secrets
              name: verification-secrets
              readOnly: true
      serviceAccountName: tekton-pipelines-controller
      volumes:
        - configMap:
            name: config-logging
          name: config-logging
        - configMap:
            name: config-registry-cert
          name: config-registry-cert
        - name: verification-secrets
          secret:
            optional: true
            secretName: verification-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
    app.kubernetes.io/name: '{{ include "tekton.name" . }}'
    app.kubernetes.io/part-of: tekton-pipelines
    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
    helm.sh/chart: '{{ include "tekton.chart" . }}'
    pipeline.tekton.dev/release: v0.44.0
    version: v0.44.0
  name: tekton-pipelines-webhook
  namespace: tekton-pipelines
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: '{{ .Release.Name }}'
      app.kubernetes.io/managed-by: '{{ .Release.Service }}'
      app.kubernetes.io/name: '{{ include "tekton.name" . }}'
      app.kubernetes.io/part-of: tekton-pipelines
      app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
      helm.sh/chart: '{{ include "tekton.chart" . }}'
  template:
    metadata:
      labels:
        app: tekton-pipelines-webhook
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/managed-by: '{{ .Release.Service }}'
        app.kubernetes.io/name: '{{ include "tekton.name" . }}'
        app.kubernetes.io/part-of: tekton-pipelines
        app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
        helm.sh/chart: '{{ include "tekton.chart" . }}'
        pipeline.tekton.dev/release: v0.44.0
        version: v0.44.0
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: kubernetes.io/os
                    operator: NotIn
                    values:
                      - windows
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/component: webhook
                    app.kubernetes.io/instance: '{{ .Release.Name }}'
                    app.kubernetes.io/managed-by: '{{ .Release.Service }}'
                    app.kubernetes.io/name: '{{ include "tekton.name" . }}'
                    app.kubernetes.io/part-of: tekton-pipelines
                    app.kubernetes.io/version: '{{ .Chart.AppVersion }}'
                    helm.sh/chart: '{{ include "tekton.chart" . }}'
                topologyKey: kubernetes.io/hostname
              weight: 100
      containers:
        - env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: CONFIG_LEADERELECTION_NAME
              value: config-leader-election
            - name: CONFIG_FEATURE_FLAGS_NAME
              value: feature-flags
            - name: WEBHOOK_PORT
              value: "8443"
            - name: WEBHOOK_ADMISSION_CONTROLLER_NAME
              value: webhook.pipeline.tekton.dev
            - name: WEBHOOK_SERVICE_NAME
              value: tekton-pipelines-webhook
            - name: WEBHOOK_SECRET_NAME
              value: webhook-certs
            - name: METRICS_DOMAIN
              value: tekton.dev/pipeline
          image: gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/webhook:v0.44.0@sha256:f9649cd6efac896defc9da687d0c5e6005e3c2c2e323aed3653917b29c257a5e
          livenessProbe:
            httpGet:
              path: /health
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: webhook
          ports:
            - containerPort: 9090
              name: metrics
            - containerPort: 8008
              name: profiling
            - containerPort: 8443
              name: https-webhook
            - containerPort: 8080
              name: probes
          readinessProbe:
            httpGet:
              path: /readiness
              port: probes
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
            seccompProfile:
              type: RuntimeDefault
      serviceAccountName: tekton-pipelines-webhook
