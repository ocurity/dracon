apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  creationTimestamp: null
  name: dracon-dast-project
spec:
  params:
  - default: ""
    name: base-scan-tags
    type: string
  - default: ""
    name: producer-zaproxy-target
    type: string
  - default: ""
    name: producer-zaproxy-config-file-base64
    type: string
  - default: ""
    name: producer-zaproxy-flags
    type: string
  - default: ""
    name: producer-zaproxy-automation-framework-file-base64
    type: string
  - default: cGFja2FnZSBleGFtcGxlLmdvc2VjCgpkZWZhdWx0IGFsbG93IDo9IGZhbHNlCgphbGxvdyA9dHJ1ZSB7CiAgICBwcmludChpbnB1dCkKICAgIGNoZWNrX3NldmVyaXR5Cn0KCmNoZWNrX3NldmVyaXR5IHsKICAgIGlucHV0LnNldmVyaXR5ID09ICJTRVZFUklUWV9ISUdIIgp9CmNoZWNrX3NldmVyaXR5IHsKICAgIGlucHV0LnNldmVyaXR5ID09ICJTRVZFUklUWV9NRURJVU0iCn0KY2hlY2tfc2V2ZXJpdHkgewogICAgaW5wdXQuc2V2ZXJpdHkgPT0gIlNFVkVSSVRZX0xPVyIKfQ==
    name: enricher-policy-base64-policy
    type: string
  - default: ""
    name: enricher-policy-annotation
    type: string
  - default: ""
    description: An optional key to sign each aggregated result with
    name: enricher-aggregator-b64-signature-key
    type: string
  - default: mongodb://consumer-mongodb:consumer-mongodb@consumer-mongodb:27017/consumer-mongodb
    name: consumer-mongodb-db-uri
    type: string
  - default: consumer-mongodb
    name: consumer-mongodb-db-name
    type: string
  - default: consumer-mongodb
    name: consumer-mongodb-collection-name
    type: string
  - default: http://dracon-es-elasticsearch-es-http:9200
    name: consumer-elasticsearch-url
    type: string
  - default: ""
    name: consumer-elasticsearch-description-template
    type: string
  tasks:
  - name: base
    params:
    - name: base-scan-tags
      value: $(params.base-scan-tags)
    taskRef:
      name: base
  - name: producer-zaproxy
    params:
    - name: producer-zaproxy-target
      value: $(params.producer-zaproxy-target)
    - name: producer-zaproxy-config-file-base64
      value: $(params.producer-zaproxy-config-file-base64)
    - name: producer-zaproxy-flags
      value: $(params.producer-zaproxy-flags)
    - name: producer-zaproxy-automation-framework-file-base64
      value: $(params.producer-zaproxy-automation-framework-file-base64)
    - name: anchors
      value: []
    - name: dracon_scan_id
      value: $(tasks.base.results.dracon-scan-id)
    - name: dracon_scan_start_time
      value: $(tasks.base.results.dracon-scan-start-time)
    - name: dracon_scan_tags
      value: $(tasks.base.results.dracon-scan-tags)
    taskRef:
      name: producer-zaproxy
    workspaces:
    - name: output
      workspace: output
  - name: producer-aggregator
    params:
    - name: anchors
      value:
      - $(tasks.producer-zaproxy.results.anchor)
    taskRef:
      name: producer-aggregator
    workspaces:
    - name: output
      workspace: output
  - name: enricher-policy
    params:
    - name: enricher-policy-base64-policy
      value: $(params.enricher-policy-base64-policy)
    - name: enricher-policy-annotation
      value: $(params.enricher-policy-annotation)
    - name: anchors
      value:
      - $(tasks.producer-aggregator.results.anchor)
    taskRef:
      name: enricher-policy
    workspaces:
    - name: output
      workspace: output
  - name: enricher-deduplication
    params:
    - name: anchors
      value:
      - $(tasks.producer-aggregator.results.anchor)
    taskRef:
      name: enricher-deduplication
    workspaces:
    - name: output
      workspace: output
  - name: enricher-aggregator
    params:
    - name: enricher-aggregator-b64-signature-key
      value: $(params.enricher-aggregator-b64-signature-key)
    - name: anchors
      value:
      - $(tasks.enricher-policy.results.anchor)
      - $(tasks.enricher-deduplication.results.anchor)
    taskRef:
      name: enricher-aggregator
    workspaces:
    - name: output
      workspace: output
  - name: consumer-mongodb
    params:
    - name: consumer-mongodb-db-uri
      value: $(params.consumer-mongodb-db-uri)
    - name: consumer-mongodb-db-name
      value: $(params.consumer-mongodb-db-name)
    - name: consumer-mongodb-collection-name
      value: $(params.consumer-mongodb-collection-name)
    - name: anchors
      value:
      - $(tasks.enricher-aggregator.results.anchor)
    taskRef:
      name: consumer-mongodb
    workspaces:
    - name: output
      workspace: output
  - name: consumer-elasticsearch
    params:
    - name: consumer-elasticsearch-url
      value: $(params.consumer-elasticsearch-url)
    - name: consumer-elasticsearch-description-template
      value: $(params.consumer-elasticsearch-description-template)
    - name: anchors
      value:
      - $(tasks.enricher-aggregator.results.anchor)
    taskRef:
      name: consumer-elasticsearch
    workspaces:
    - name: output
      workspace: output
  workspaces:
  - name: output
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  labels:
    v1.dracon.ocurity.com/component: base
  name: base
spec:
  params:
  - default: ""
    name: base-scan-tags
    type: string
  results:
  - description: The scan start time
    name: dracon-scan-start-time
  - description: The scan unique id
    name: dracon-scan-id
  - description: serialized map[string]string of tags for this scan
    name: dracon-scan-tags
  steps:
  - image: docker.io/busybox:1.35.0
    name: generate-scan-id-start-time
    resources: {}
    script: |
      cat /proc/sys/kernel/random/uuid | tee $(results.dracon-scan-id.path)
      date +"%Y-%m-%dT%H:%M:%SZ" | tee $(results.dracon-scan-start-time.path)
      echo "$(params.base-scan-tags)" | tee $(results.dracon-scan-tags.path)
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  labels:
    v1.dracon.ocurity.com/component: producer
  name: producer-zaproxy
spec:
  params:
  - default: ""
    name: producer-zaproxy-target
    type: string
  - default: ""
    name: producer-zaproxy-config-file-base64
    type: string
  - default: ""
    name: producer-zaproxy-flags
    type: string
  - default: ""
    name: producer-zaproxy-automation-framework-file-base64
    type: string
  - default: null
    description: A list of tasks that this task depends on
    name: anchors
    type: array
  - name: dracon_scan_id
    type: string
  - name: dracon_scan_start_time
    type: string
  - name: dracon_scan_tags
    type: string
  results:
  - description: An anchor to allow other tasks to depend on this task.
    name: anchor
  steps:
  - env:
    - name: DRACON_SCAN_TIME
      value: $(params.dracon_scan_start_time)
    - name: DRACON_SCAN_ID
      value: $(params.dracon_scan_id)
    - name: DRACON_SCAN_TAGS
      value: $(params.dracon_scan_tags)
    image: docker.io/owasp/zap2docker-stable:2.12.0
    name: run-zap
    resources: {}
    script: "#! /bin/bash\n set -ex\n automation=\"$(params.producer-zaproxy-automation-framework-file-base64)\"\n
      configFile=\"$(params.producer-zaproxy-config-file-base64)\"\n if [ -z \"$automation\"
      ]; then \n   if [ -z  \"$configFile\" ]; then\n     echo \"Running ZAP with
      args: $(params.producer-zaproxy-flags)\"\n     zap.sh -cmd -silent -notel -quickout
      /zap/wrk/out.json -quickurl $(params.producer-zaproxy-target) $(params.producer-zaproxy-flags)\n
      \  else \n     echo \"$configFile\" | base64 -d > configuration.xml\n     zap.sh
      -cmd -silent -notel -quickout /zap/wrk/out.json -quickurl $(params.producer-zaproxy-target)
      -configFile configuration.xml\n     $(p..arams.producer-zaproxy-flags)\n   fi\n
      else \n   echo \"$automation\" | base64 -d > automation.yaml\n   cat automation.yaml\n
      \  zap.sh -cmd -autorun automation.yaml\n fi\n"
    volumeMounts:
    - mountPath: /zap/wrk
      name: scratch
  - args:
    - -in=/scratch/out.json
    - -out=$(workspaces.output.path)/.dracon/producers/zap.pb
    command:
    - /app/components/producers/zaproxy/zaproxy-parser
    env:
    - name: DRACON_SCAN_TIME
      value: $(params.dracon_scan_start_time)
    - name: DRACON_SCAN_ID
      value: $(params.dracon_scan_id)
    - name: DRACON_SCAN_TAGS
      value: $(params.dracon_scan_tags)
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/producers/zaproxy:{{
      default "latest" .Values.dracon_os_component_version }}'
    imagePullPolicy: IfNotPresent
    name: produce-issues
    resources: {}
    volumeMounts:
    - mountPath: /scratch
      name: scratch
  - env:
    - name: DRACON_SCAN_TIME
      value: $(params.dracon_scan_start_time)
    - name: DRACON_SCAN_ID
      value: $(params.dracon_scan_id)
    - name: DRACON_SCAN_TAGS
      value: $(params.dracon_scan_tags)
    image: docker.io/busybox
    name: anchor
    resources: {}
    script: echo "$(context.task.name)" > "$(results.anchor.path)"
  volumes:
  - emptyDir: {}
    name: scratch
  workspaces:
  - description: The workspace containing the source-code to scan.
    name: output
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  labels:
    v1.dracon.ocurity.com/component: producer-aggregator
  name: producer-aggregator
spec:
  params:
  - default: null
    description: A list of tasks that this task depends on
    name: anchors
    type: array
  results:
  - description: An anchor to allow other tasks to depend on this task.
    name: anchor
  steps:
  - args:
    - $(workspaces.output.path)
    command:
    - ls
    image: docker.io/busybox
    name: aggregate
    resources: {}
  - command:
    - /app/components/producers/aggregator/tagger
    env:
    - name: READ_PATH
      value: $(workspaces.output.path)/.dracon/producers
    - name: WRITE_PATH
      value: $(workspaces.output.path)/.dracon/producers
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/producers/tagger:{{
      default "latest" .Values.dracon_os_component_version }}'
    name: tag
    resources: {}
  - image: docker.io/busybox
    name: anchor
    resources: {}
    script: echo "$(context.task.name)" > "$(results.anchor.path)"
  workspaces:
  - description: The workspace containing the source-code to scan.
    name: output
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  labels:
    v1.dracon.ocurity.com/component: enricher
  name: enricher-policy
spec:
  params:
  - default: cGFja2FnZSBleGFtcGxlLmdvc2VjCgpkZWZhdWx0IGFsbG93IDo9IGZhbHNlCgphbGxvdyA9dHJ1ZSB7CiAgICBwcmludChpbnB1dCkKICAgIGNoZWNrX3NldmVyaXR5Cn0KCmNoZWNrX3NldmVyaXR5IHsKICAgIGlucHV0LnNldmVyaXR5ID09ICJTRVZFUklUWV9ISUdIIgp9CmNoZWNrX3NldmVyaXR5IHsKICAgIGlucHV0LnNldmVyaXR5ID09ICJTRVZFUklUWV9NRURJVU0iCn0KY2hlY2tfc2V2ZXJpdHkgewogICAgaW5wdXQuc2V2ZXJpdHkgPT0gIlNFVkVSSVRZX0xPVyIKfQ==
    name: enricher-policy-base64-policy
    type: string
  - default: ""
    name: enricher-policy-annotation
    type: string
  - default: null
    description: A list of tasks that this task depends on
    name: anchors
    type: array
  results:
  - description: An anchor to allow other tasks to depend on this task.
    name: anchor
  sidecars:
  - args:
    - run
    - --server
    - --addr
    - 0.0.0.0:8181
    - --log-level
    - debug
    command:
    - /opa
    image: docker.io/openpolicyagent/opa:0.44.0-rootless
    name: open-policy-agent
    resources:
      limits:
        cpu: "1"
        memory: 5Gi
      requests:
        cpu: 500m
        memory: 512Mi
    securityContext:
      runAsGroup: 70
      runAsUser: 70
  steps:
  - command:
    - /app/components/enrichers/policy/policy
    env:
    - name: READ_PATH
      value: $(workspaces.output.path)/.dracon/producers
    - name: WRITE_PATH
      value: $(workspaces.output.path)/.dracon/enrichers/policy
    - name: POLICY
      value: $(params.enricher-policy-base64-policy)
    - name: OPA_SERVER
      value: http://localhost:8181
    - name: ANNOTATION
      value: $(params.enricher-policy-annotation)
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/enrichers/policy:{{
      default "latest" .Values.dracon_os_component_version }}'
    imagePullPolicy: IfNotPresent
    name: run-enricher
    resources: {}
  - image: docker.io/busybox
    name: anchor
    resources: {}
    script: echo "$(context.task.name)" > "$(results.anchor.path)"
  workspaces:
  - description: The workspace containing the source-code to scan.
    name: output
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  labels:
    v1.dracon.ocurity.com/component: enricher
  name: enricher-deduplication
spec:
  params:
  - default: null
    description: A list of tasks that this task depends on
    name: anchors
    type: array
  results:
  - description: An anchor to allow other tasks to depend on this task.
    name: anchor
  steps:
  - command:
    - /app/components/enrichers/deduplication/deduplication
    env:
    - name: ENRICHER_READ_PATH
      value: $(workspaces.output.path)/.dracon/producers
    - name: ENRICHER_WRITE_PATH
      value: $(workspaces.output.path)/.dracon/enrichers/deduplication
    - name: ENRICHER_DB_CONNECTION
      value: postgresql://dracon:dracon@dracon-enrichment-db.$(context.taskRun.namespace).svc?sslmode=disable
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/enrichers/deduplication:{{
      default "latest" .Values.dracon_os_component_version }}'
    imagePullPolicy: IfNotPresent
    name: run-enricher
    resources: {}
  - image: docker.io/busybox
    name: anchor
    resources: {}
    script: echo "$(context.task.name)" > "$(results.anchor.path)"
  workspaces:
  - description: The workspace containing the source-code to scan.
    name: output
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  labels:
    v1.dracon.ocurity.com/component: enricher-aggregator
  name: enricher-aggregator
spec:
  params:
  - default: ""
    description: An optional key to sign each aggregated result with
    name: enricher-aggregator-b64-signature-key
    type: string
  - default: null
    description: A list of tasks that this task depends on
    name: anchors
    type: array
  results:
  - description: An anchor to allow other tasks to depend on this task.
    name: anchor
  steps:
  - args:
    - $(workspaces.output.path)
    command:
    - ls
    - -lah
    image: docker.io/busybox:1.35.0
    name: aggregate
    resources: {}
  - command:
    - /app/components/enrichers/aggregator/aggregator
    env:
    - name: READ_PATH
      value: $(workspaces.output.path)/.dracon/enrichers
    - name: WRITE_PATH
      value: $(workspaces.output.path)/.dracon/enrichers
    - name: B64_SIGNATURE_KEY
      value: $(params.enricher-aggregator-b64-signature-key)
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/enrichers/aggregator:{{
      default "latest" .Values.dracon_os_component_version }}'
    name: aggregate-tagged-issues
    resources: {}
  - image: docker.io/busybox
    name: anchor
    resources: {}
    script: echo "$(context.task.name)" > "$(results.anchor.path)"
  workspaces:
  - description: The workspace containing the source-code to scan.
    name: output
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  labels:
    v1.dracon.ocurity.com/component: consumer
  name: consumer-mongodb
spec:
  params:
  - default: mongodb://consumer-mongodb:consumer-mongodb@consumer-mongodb:27017/consumer-mongodb
    name: consumer-mongodb-db-uri
    type: string
  - default: consumer-mongodb
    name: consumer-mongodb-db-name
    type: string
  - default: consumer-mongodb
    name: consumer-mongodb-collection-name
    type: string
  - default: null
    description: A list of tasks that this task depends on
    name: anchors
    type: array
  steps:
  - args:
    - -in
    - $(workspaces.output.path)/.dracon/enrichers/
    - -db-uri
    - $(params.consumer-mongodb-db-uri)
    - -db-name
    - $(params.consumer-mongodb-db-name)
    - -collection-name
    - $(params.consumer-mongodb-collection-name)
    command:
    - /app/components/consumers/mongodb/mongodb
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/consumers/mongodb:{{
      default "latest" .Values.dracon_os_component_version }}'
    imagePullPolicy: IfNotPresent
    name: run-consumer
    resources: {}
  workspaces:
  - description: The workspace containing the source-code to scan.
    name: output
---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  creationTimestamp: null
  labels:
    v1.dracon.ocurity.com/component: consumer
  name: consumer-elasticsearch
spec:
  params:
  - default: http://dracon-es-elasticsearch-es-http:9200
    name: consumer-elasticsearch-url
    type: string
  - default: ""
    name: consumer-elasticsearch-description-template
    type: string
  - default: null
    description: A list of tasks that this task depends on
    name: anchors
    type: array
  steps:
  - args:
    - -in
    - $(workspaces.output.path)/.dracon/enrichers/
    - -es-index
    - dracon
    - -descriptionTemplate
    - $(params.consumer-elasticsearch-description-template)
    command:
    - /app/components/consumers/elasticsearch/elasticsearch
    env:
    - name: ELASTICSEARCH_URL
      value: $(params.consumer-elasticsearch-url)
    image: '{{ default "ghcr.io/ocurity/dracon" .Values.container_registry }}/components/consumers/elasticsearch:{{
      default "latest" .Values.dracon_os_component_version }}'
    imagePullPolicy: IfNotPresent
    name: run-consumer
    resources: {}
  workspaces:
  - description: The workspace containing the source-code to scan.
    name: output
